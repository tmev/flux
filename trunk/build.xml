<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Intro" default="build">

	<!-- Definitions of variables used during the rest of this script -->

	<property file="version.properties" />
	<property file="application.properties" />

	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="dist.lib.dir" value="${basedir}/dist/lib" />
	<property name="lib.dir" value="${basedir}/lib" />

	<property name="dist.jar" value="${dist.dir}/flux.jar" />
	<property name="main.class" value="ee.ut.math.tvt.flux.Intro" />

	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="conf.dir" value="${basedir}/conf"/>

	<!-- database variables -->
	<property name="data.dir"	value="${basedir}/data"/>
	<property name="db.file"	value="${data.dir}/POSdb"/>
	<property name="db.alias"	value="POS"/>
	<property name="db.url" 	value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"   value="${lib.dir}/hibernate"/>

	<!-- path for ant to find Hibernate jar -->
	<path id="run.classpath">
		<pathelement location="${build.classes.dir}"/>
		<!-- configuration -->
		<pathelement location="${conf.dir}"/>

		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>

		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- adding location of the jar files for DB -->
	<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>

		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>


	<path id="base.path" path="${basedir}" />
	<path id="class.path" path="${build.classes.dir}" />

	<zipfileset id="log.core" includes="**/*.class" src="${lib.dir}/log4j-core-2.0-beta9.jar" />
	<zipfileset id="log.api" includes="**/*.class" src="${lib.dir}/log4j-api-2.0-beta9.jar" />


	<target name="clean" description="Remove all files from previous build.">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>


	<target name="build" description="Build the system">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" classpathref="compile.classpath" includeantruntime="false" debug="true">
		</javac>
	</target>


	<target name="dist" description="Build .jar file for distribution." depends="increaseRevision, build">
		<jar destfile="${dist.jar}" basedir="${build.classes.dir}">
			<zipfileset dir="${basedir}" includes="application.properties" fullpath="application.properties" />
			<zipfileset dir="${basedir}" includes="version.properties" fullpath="version.properties" />
			<zipfileset dir="${basedir}" includes="log4j2.xml" fullpath="log4j2.xml" />
			<zipfileset dir="${basedir}" includes="solidFluxUI.png" fullpath="solidFluxUI.png" />
			<zipfileset dir="${basedir}" includes="closeButton.png" fullpath="closeButton.png" />
			<zipfileset dir="${basedir}" includes="OpenSans-Light.ttf" fullpath="OpenSans-Light.ttf" />
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
				<attribute name="Class-Path" value="lib/commons-logging-1.1.1.jar lib/hibernate lib/hsqldb.jar lib/jgoodies-common-1.6.0.jar lib/jgoodies-common-1.6.0-javadoc.jar lib/jgoodies-common-1.6.0-sources.jar lib/jgoodies-looks-2.5.3.jar lib/jgoodies-looks-2.5.3-javadoc.jar lib/jgoodies-looks-2.5.3-sources.jar lib/log4j-api-2.0-beta9.jar lib/log4j-api-2.0-beta9-javadoc.jar lib/log4j-api-2.0-beta9-sources.jar lib/log4j-core-2.0-beta9.jar lib/log4j-core-2.0-beta9-javadoc.jar lib/log4j-core-2.0-beta9-sources.jar lib/xercesImpl.jar lib/xml-apis.jar lib/antlr-2.7.7.jar lib/dom4j-1.6.1.jar lib/ehcache-core-2.4.3.jar lib/hibernate-commons-annotations-4.0.1.Final.jar lib/hibernate-core-4.1.7.Final.jar lib/hibernate-ehcache-4.1.7.Final.jar lib/hibernate-jpa-2.0-api-1.0.1.Final.jar lib/javassist-3.15.0-GA.jar lib/jboss-logging-3.1.0.GA.jar lib/jboss-transaction-api_1.1_spec-1.0.0.Final.jar lib/slf4j-api-1.6.1.jar" />
				<attribute name="Implementation-Vendor" value="flux" />
				<attribute name="Implementation-Title" value="IntroUI" />
				<attribute name="Implementation-Version" value="${build.number}" />
			</manifest>
		</jar>
		<copy todir="${dist.lib.dir}" flatten="true">
			<path refid="compile.classpath" />
		</copy>
	</target>


	<target name="run" description="Run the build.">
		<java classname="${main.class}" classpath="${build.classes.dir}" fork="true">
			<classpath refid="run.classpath" />
			<classpath refid="base.path" />
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>


	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="${main.class}" classpath="${build.classes.dir}" fork="true">
			<arg value="console" />
			<classpath refid="run.classpath" />
			<classpath refid="base.path" />
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>


	<target name="jrun" description="Run the built jar file.">
		<java jar="${dist.jar}" fork="true" />
	</target>


	<target name="increaseRevision" description="Increase revision and update version.properties.">

		<propertyfile file="version.properties" comment="Version properties">
			<entry key="build.revision.number" type="int" default="0" operation="+" />
		</propertyfile>

		<property file="version.properties" prefix="new" />

		<propertyfile file="version.properties" comment="Version properties">
			<entry key="build.number" operation="=" value="${new.build.major.number}.${new.build.minor.number}.${new.build.revision.number}" />
		</propertyfile>
	</target>

	<target name="git_commit" description="Commit and push changes to repository">
		<exec executable="git">
			<arg value="add" />
			<arg value="-A" />
		</exec>
		<input message="Commit coment" addproperty="commitMsg" />
		<echo message="Commiting all changes with message ${commitMsg}" />
		<exec executable="git">
			<arg value="commit" />
			<arg value="-m ${commitMsg}" />
		</exec>
		<input message="Name:" addproperty="name" />
		<input message="Password:" addproperty="pas" />
		<exec executable="git">
			<arg value="push"/>
			<arg value="https://${name}:${pas}@github.com/sergeijakovlev/flux.git"/>
		</exec>
	</target>

	<target name="git_tag" description="Creates a tag">
		<input message="Name:" addproperty="namefortag" />
		<input message="Password:" addproperty="pasfortag" />
		<input message="Tag name:" addproperty="tagName" />
		<input message="Tag coment:" addproperty="tagComent" />
		<exec executable="git">
			<arg value="tag" />
			<arg value="-a" />
			<arg value="${tagName}" />
			<arg value="-m" />
			<arg value="${tagComent}" />
		</exec>
		<exec executable="git">
			<arg value="push" />
			<arg value="https://${namefortag}:${pasfortag}@github.com/sergeijakovlev/flux.git"/>
			<arg value="--tags" />
		</exec>
	</target>

	<!-- DB targets -->
	<target name="dbmanager" description="Start the HSQLDB manager">
		<java
	            classname="org.hsqldb.util.DatabaseManagerSwing"
	            classpathref="run.classpath"
	            fork="yes">
			<arg line="--user sa --url ${db.url}" />
		</java>
	</target>

	<target name="startdb" description="Start the HSQLDB with the default params">
		<java
	            classname="org.hsqldb.Server"
	            classpathref="run.classpath"
	            fork="yes">
			<arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" />
		</java>
	</target>

</project>

